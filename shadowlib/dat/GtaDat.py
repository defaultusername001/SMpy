class GtaDat:
    def __init__(self, path, gameDir):
        self.fileName = path
        self.gameDir = gameDir
        self.changed = False
        self.img = []
        self.ipl = []
        self.ide = []
        self.imgList = []
        self.water = []
        self.colFile = []
        self.splash = []
        self.loadGtaDat()
    
    def loadGtaDat(self):
        with open(self.fileName, "r") as input:
            for line in input:
                if not line.startswith("#") and not line.strip() == "":
                    split = line.strip().split(" ")
                    filePath = split[1].replace("platform:", "pc").replace("common:", "common").replace("IPL", "WPL")
                    if split[0] == "IMG":
                        self.img.append(filePath)
                    elif split[0] == "IDE":
                        self.ide.append(filePath)
                    elif split[0] == "IPL":
                        self.ipl.append(filePath)
                    elif split[0] == "IMGLIST":
                        self.imgList.append(filePath)
                    elif split[0] == "WATER":
                        self.water.append(filePath)
                    elif split[0] == "SPLASH":
                        self.splash.append(filePath)
                    elif split[0] == "COLFILE":
                        self.colFile.append(filePath)
        self.loadImagesFromIMGLIST()

    def loadImagesFromIMGLIST(self):
        for i, imgTexts in enumerate(self.imgList):
            try:
                print("Loading img text: " + self.gameDir + self.imgList[i])
                with open(self.gameDir + self.imgList[i], "r") as inputImgText:
                    for line in inputImgText:
                        if line.startswith("platformimg:"):
                            self.img.append(line.replace("platformimg:", "pc").replace("\t", ""))
            except Exception as ex:
                print("An error occurred:", ex)

    def save(self):
        try:
            with open(self.fileName, "w") as output:
                output.write("# gta.dat generated by Shadow-Mapper\n")
                output.write("\n#\n")
                output.write("# Imglist\n")
                output.write("#\n\n")
                for i, imgList_ in enumerate(self.imgList):
                    output.write("IMGLIST " + self.imgList[i].replace("pc", "platform:").replace("common", "common:"))
                    output.write("\n")
                output.write("\n#\n")
                output.write("# Water\n")
                output.write("#\n\n")
                for i, water_ in enumerate(self.water):
                    output.write("WATER " + self.water[i].replace("pc", "platform:").replace("common", "common:"))
                    output.write("\n")
                output.write("\n#\n")
                output.write("# Object types\n")
                output.write("#\n\n")
                for i, ide_ in enumerate(self.ide):
                    output.write("IDE " + self.ide[i].replace("pc", "platform:").replace("common", "common:"))
                    output.write("\n")
                output.write("\n#\n")
                output.write("# IPL\n")
                output.write("#\n\n")
                for i, ipl_ in enumerate(self.ipl):
                    output.write("IPL " + self.ipl[i].replace("pc", "platform:").replace("common", "common:").replace("wpl", "ipl"))
                    output.write("\n")
        except Exception as ex:
            print("Error", ex)
  